package core

func (c *GbCore) Test(a byte) {
	switch a {

	//8bits LD
	case 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
		0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f,
		0x70, 0x71, 0x72, 0x73, 0x74, 0x75,       0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f,
		0x02, 0x12, 0x0a, 0x1a,
		0x06, 0x16, 0x26, 0x36, 0x0e, 0x1e, 0x2e, 0x3e : 
		c.setter(a)(c.operand2(a)())

	// ADD
	case 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87:
		add := c.operand1(a)() + c.operand2(a)()

		c.GbCpu.SetfZ( add == 0 )
		c.GbCpu.SetfS( false )
		c.GbCpu.SetfH( (c.GbCpu.A & 0xf) + (c.operand2(a)()&0xf) > 0xf )
		c.GbCpu.SetfC( add > 0xff)

		c.setter(a)(add)
	}

	// ADC
	case 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f:
		add := c.operand1(a)() + c.operand2(a)()

		c.GbCpu.SetfZ( add == 0 )
		c.GbCpu.SetfS( false )
		c.GbCpu.SetfH( (c.GbCpu.A & 0xf) + (c.operand2(a)()&0xf) > 0xf )
		c.GbCpu.SetfC( add > 0xff)
		
		c.setter(a)(add)
	}

}